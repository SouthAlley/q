name: del

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

env:
  TZ: Asia/Shanghai

jobs:
  Fork-Filter-list:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4.1.0
        with:
          repository: SouthAlley/q
          path: q-repo
          
      - name: 下载文件到 Surge
        run: |
           mkdir -p VPN_Tool-repo/Surge/Rule
           # 分流规则
           curl -L -o VPN_Tool-repo/Surge/Rule/Global.list "https://raw.githubusercontent.com/SouthAlley/q/main/local/global.list"

      - name: 编辑规则文件 rule/ad
        run: |
           cd VPN_Tool-repo/Surge/Rule
           for file in MyBlockAds.list Advertising.list Proxy.list Global.list; do
             if [ -f "$file" ]; then
               # 删除注释
               sed -i 's/#.*//' "$file"
               # 删除空行
               sed -i '/^[[:space:]]*$/d' "$file"
            else
               echo "$file not found."
            fi
           done

      - name: 删除匹配行从原始文件
        run: |
          # 定义规则类型（ad、proxy、global）
          rule_types=("ad" "proxy" "global")

          for rule_type in "${rule_types[@]}"; do
             # 定义原始文件和删除规则文件的路径
             original_file="q-repo/rule/${rule_type}/attach/del.ini"
             del_file="q-repo/local/del/del${rule_type}.ini"

            # 判断删除规则文件是否存在
            if [ -f "$del_file" ]; then
            # 遍历删除规则文件的每一行
             while IFS= read -r line
             do
              # 转义 line 变量中的特殊字符
              escaped_line=$(printf '%s\n' "$line" | sed -e 's/[]\/$*.^[]/\\&/g')
              # 使用 awk 进行匹配并输出不匹配的行
              awk '!index($0, "'"${escaped_line}"'")' "$original_file" > "$original_file.tmp" && mv "$original_file.tmp" "$original_file"
            done < "$del_file"

             # 输出删除操作完成的消息
             echo "删除${rule_type}操作完成。"
           else
             # 如果删除规则文件不存在，输出相应的消息
             echo "$del_file 不存在。跳过删除${rule_type}操作。"
            fi
          done


      - name: Add and Commit changes
        run: |
          cd q-repo
          if [[ -n $(git status -s) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add "rule/ad/attach/*" "rule/global/attach/*" "rule/proxy/attach/*"
            git commit -m "Update rules"
            git push origin HEAD
          else
            echo "No changes to commit."
          fi
