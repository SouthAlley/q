name: plugin

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 */2 * *"


jobs:
  Fork-Filter-list:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4.1.0
        with:
          repository: SouthAlley/q
          path: q-repo
          
      - name: 下载文件
        run: |
           # 定义关联数组，键为文件名，值为路径和 URL 的组合
           declare -A file_path_url=(
               ["wawa.list"]="xg/wawa.list https://raw.githubusercontent.com/RuCu6/Loon/main/Plugins/myblockads.plugin"
               
               )

           # 循环处理每个文件
           for file in "${!file_path_url[@]}"; do
               # 分割路径和 URL
               IFS=' ' read -r path url <<< "${file_path_url[$file]}"
    
               # 创建目标文件所在的目录（如果不存在）
               mkdir -p "q-repo/${path%/*}"
    
               # 使用 curl 下载文件到目标路径
               curl -L -o "q-repo/$path" "$url"

               # 得到 rule_type
               IFS='/' read -r _ rule_type _ <<< "${path%.list}"

               # 定义原始文件和删除规则文件的路径
               original_file="q-repo/$path"
               del_file="q-repo/xg/del/${rule_type}.ini"
               add_file="q-repo/xg/add/${rule_type}.ini"

               # 处理规则的函数
               process_rules() {
                   # 查找指定行并删除该行以下的所有内容
                   sed -i '/^[Rewrite]/q' "$original_file"
                   }
                   
               if [ -f "$original_file" ]; then
                   # 运行规则处理函数
                   process_rules
    
                   if [[ "$file" == china-GeQ1an.list ]]; then
                       # 查找指定行并保留该行以下的所有内容
                       sed -i '1,/# > Mainland/d' "$original_file"
                   fi
    
                   # 其他规则处理代码（如果有）
                   echo "运行其他规则处理（示例）"
               else
                   echo "$original_file not found."
               fi

                   

               # 判断删除规则文件是否存在
               if [ -f "$del_file" ]; then
                    # 删除匹配行并备份原始文件
                    grep -vFf "$del_file" "$original_file" > "$original_file.tmp" && mv "$original_file.tmp" "$original_file"

                    # 输出删除操作完成的消息
                    echo "删除${rule_type}操作完成。"
               else
                    # 如果删除规则文件不存在，输出相应的消息
                    echo "$del_file 不存在。跳过删除${rule_type}操作。"
               fi
               
               # 判断自定义规则文件是否存在
               if [ -f "$add_file" ]; then
                   # 如果目标文件存在，将自定义规则附加到目标文件
                   cat "$add_file" >> "$original_file"
                   # 输出添加操作完成的消息
                   echo "添加${rule_type}操作完成。"
               else
                   # 如果自定义规则文件不存在，输出相应的消息
                   echo "$add_file 不存在。跳过添加${rule_type}操作。"
               fi
           done


      - name: Add and 提交更改
        run: |
          cd q-repo
          if [[ -n $(git status -s) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "xg"
            git push
          else
            echo "No changes to commit."
          fi
